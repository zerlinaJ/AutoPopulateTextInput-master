{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Zerlina\\\\whiteHat\\\\Module1\\\\ReactNative\\\\4.WirelessLibrary\\\\c72\\\\AutoPopulateTextInput-master\\\\screens\\\\BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from 'firebase';\nimport db from \"../config\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var transactionMessage;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              transactionMessage = null;\n              db.collection(\"books\").doc(_this.state.scannedBookId).get().then(function (doc) {\n                var book = doc.data();\n\n                if (book.bookAvailability) {\n                  _this.initiateBookIssue();\n\n                  transactionMessage = \"Book Issued\";\n                  Alert.alert(transactionMessage);\n                } else {\n                  _this.initiateBookReturn();\n\n                  transactionMessage = \"Book Returned\";\n                  Alert.alert(transactionMessage);\n                }\n              });\n\n              _this.setState({\n                transactionMessage: transactionMessage\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                studentId: _this.state.scannedStudentId,\n                bookId: _this.state.scannedBookId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"Issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                bookAvailability: false\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                noOfBooksIssued: firebase.firestore.FieldValue.increment(1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: '',\n                transactionMessage: 'Book Issued'\n              });\n\n              alert(\"Book Issued\");\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                studentId: _this.state.scannedStudentId,\n                bookId: _this.state.scannedBookId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"Return\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                bookAvailability: true\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                noOfBooksIssued: firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: '',\n                transactionMessage: 'Book Returned'\n              });\n\n              alert(\"Book Returned\");\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: null\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 9\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedBookId: text\n            });\n          },\n          value: this.state.scannedBookId.toUpperCase(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId.toUpperCase(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee6() {\n            var transactionMessage;\n            return _regeneratorRuntime.async(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _context6.next = 2;\n                    return _regeneratorRuntime.awrap(_this2.handleTransaction());\n\n                  case 2:\n                    transactionMessage = _context6.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }\n        }, \"Submit\")), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }\n        }, this.state.transactionMessage));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["D:/Zerlina/whiteHat/Module1/ReactNative/4.WirelessLibrary/c72/AutoPopulateTextInput-master/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","handleTransaction","transactionMessage","collection","doc","get","then","book","bookAvailability","initiateBookIssue","Alert","alert","initiateBookReturn","add","studentId","bookId","date","firestore","Timestamp","now","toDate","transactionType","update","noOfBooksIssued","FieldValue","increment","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","toUpperCase","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, Alert, StyleSheet,KeyboardAvoidingView } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from 'firebase';\nimport db from '../config'\n\nexport default class TransactionScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: null\n    }\n  }\n\n  getCameraPermissions = async (id) => {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n    this.setState({\n      /*status === \"granted\" is true when user has granted permission\n        status === \"granted\" is false when user has not granted the permission\n      */\n      hasCameraPermissions: status === \"granted\",\n      buttonState: id,\n      scanned: false\n    });\n  }\n\n  handleBarCodeScanned = async ({ type, data }) => {\n    const { buttonState } = this.state\n\n    if (buttonState === \"BookId\") {\n      this.setState({\n        scanned: true,\n        scannedBookId: data,\n        buttonState: 'normal'\n      });\n    }\n    else if (buttonState === \"StudentId\") {\n      this.setState({\n        scanned: true,\n        scannedStudentId: data,\n        buttonState: 'normal'\n      });\n    }\n\n  }\n\n\n  \n  handleTransaction = async()=>{\n    var transactionMessage = null;\n    db.collection(\"books\").doc(this.state.scannedBookId).get()\n    .then((doc)=>{\n      var book = doc.data()\n      if(book.bookAvailability){\n        this.initiateBookIssue();\n        transactionMessage = \"Book Issued\"\n        Alert.alert(transactionMessage)\n      }\n      else{\n        this.initiateBookReturn();\n        transactionMessage = \"Book Returned\"\n        Alert.alert(transactionMessage)\n      }\n    })\n\n    this.setState({\n      transactionMessage : transactionMessage\n    })\n  }\n\n\n  \n  initiateBookIssue = async ()=>{\n    //add a transaction\n    db.collection(\"transaction\").add({\n      studentId : this.state.scannedStudentId,\n      bookId : this.state.scannedBookId,\n      date : firebase.firestore.Timestamp.now().toDate(),\n      transactionType : \"Issue\"\n    })\n\n    //change book status\n    db.collection(\"books\").doc(this.state.scannedBookId).update({\n      bookAvailability : false\n    })\n    //change number of issued books for student\n    db.collection(\"students\").doc(this.state.scannedStudentId).update({\n      noOfBooksIssued : firebase.firestore.FieldValue.increment(1)\n    })\n\n    this.setState({\n      scannedStudentId : '',\n      scannedBookId: '',\n      transactionMessage:'Book Issued'\n    })\n    alert(\"Book Issued\");\n  }\n\n\n  initiateBookReturn = async ()=>{\n    //add a transaction\n    db.collection(\"transaction\").add({\n      studentId : this.state.scannedStudentId,\n      bookId : this.state.scannedBookId,\n      date   : firebase.firestore.Timestamp.now().toDate(),\n      transactionType : \"Return\"\n    })\n\n    //change book status\n    db.collection(\"books\").doc(this.state.scannedBookId).update({\n      bookAvailability : true\n    })\n\n    //change book status\n    db.collection(\"students\").doc(this.state.scannedStudentId).update({\n      noOfBooksIssued : firebase.firestore.FieldValue.increment(-1)\n    })\n\n    this.setState({\n      scannedStudentId : '',\n      scannedBookId : '',\n      transactionMessage:'Book Returned'\n    })\n    alert(\"Book Returned\");\n  }\n\n  render() {\n    const hasCameraPermissions = this.state.hasCameraPermissions;\n    const scanned = this.state.scanned;\n    const buttonState = this.state.buttonState;\n\n    if (buttonState !== \"normal\" && hasCameraPermissions) {\n      return (\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n      );\n    }\n\n    else if (buttonState === \"normal\") {\n      return (\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\" enabled>\n          <View>\n            <Image\n              source={require(\"../assets/booklogo.jpg\")}\n              style={{ width: 200, height: 200 }} />\n            <Text style={{ textAlign: 'center', fontSize: 30 }}>Wily</Text>\n          </View>\n          <View style={styles.inputView}>\n            <TextInput\n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              onChangeText={text => this.setState({scannedBookId:text})}\n              value={this.state.scannedBookId.toUpperCase()} \n              />\n            <TouchableOpacity\n              style={styles.scanButton}\n              onPress={() => {\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.inputView}>\n            <TextInput\n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              onChangeText={text => this.setState({scannedStudentId:text})}\n              value={this.state.scannedStudentId.toUpperCase()} />\n            <TouchableOpacity\n              style={styles.scanButton}\n              onPress={() => {\n                this.getCameraPermissions(\"StudentId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <TouchableOpacity\n              style={styles.submitButton}\n              onPress={async () => {\n                var transactionMessage = await this.handleTransaction();\n              }}>\n              <Text style={styles.submitButtonText}>Submit</Text>\n              \n            </TouchableOpacity>\n            <Text>{this.state.transactionMessage}</Text>\n\n        \n            </KeyboardAvoidingView>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  }\n});"]},"metadata":{},"sourceType":"module"}