{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Zerlina\\\\whiteHat\\\\Module1\\\\ReactNative\\\\4.WirelessLibrary\\\\c73\\\\AutoPopulateTextInput-master\\\\screens\\\\BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Toast } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from 'firebase';\nimport db from \"../config\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var transactionType, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibility());\n\n            case 2:\n              transactionType = _context3.sent;\n\n              if (transactionType) {\n                _context3.next = 8;\n                break;\n              }\n\n              alert(\"The book doesn't exist in the library database!\");\n\n              _this.setState({\n                scannedStudentId: \"\",\n                scannedBookId: \"\"\n              });\n\n              _context3.next = 19;\n              break;\n\n            case 8:\n              if (!(transactionType === \"Issue\")) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue());\n\n            case 11:\n              isStudentEligible = _context3.sent;\n\n              if (isStudentEligible) {\n                _this.initiateBookIssue();\n\n                alert(\"Book issued to the student!\");\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.next = 17;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForReturn());\n\n            case 17:\n              isStudentEligible = _context3.sent;\n\n              if (isStudentEligible) {\n                _this.initiateBookReturn();\n\n                alert(\"Book returned to the library!\");\n              }\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkBookEligibility = function _callee4() {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").where(\"bookId\", \"==\", _this.state.scannedBookId).get());\n\n            case 2:\n              bookRef = _context4.sent;\n              transactionType = \"\";\n\n              if (bookRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  var book = doc.data();\n\n                  if (book.bookAvailability) {\n                    transactionType = \"Issue\";\n                  } else {\n                    transactionType = \"Return\";\n                  }\n                });\n              }\n\n              return _context4.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee5() {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"students\").where(\"studentId\", \"==\", _this.state.scannedStudentId).get());\n\n            case 2:\n              studentRef = _context5.sent;\n              isStudentEligible = \"\";\n\n              if (studentRef.docs.length === 0) {\n                _this.setState({\n                  scannedStudentId: \"\",\n                  scannedBookId: \"\"\n                });\n\n                isStudentEligible = false;\n                alert(\"The student id doesn't exist in the database!\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.noOfBooksIssued < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    alert(\"The student has already issued 2 books!\");\n\n                    _this.setState({\n                      scannedStudentId: \"\",\n                      scannedBookId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForReturn = function _callee6() {\n      var transactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", _this.state.scannedBookId).limit(1).get());\n\n            case 2:\n              transactionRef = _context6.sent;\n              isStudentEligible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastBookTransaction = doc.data();\n\n                if (lastBookTransaction.studentId === _this.state.scannedStudentId) {\n                  isStudentEligible = true;\n                } else {\n                  isStudentEligible = false;\n                  alert(\"The book wasn't issued by this student!\");\n\n                  _this.setState({\n                    scannedStudentId: \"\",\n                    scannedBookId: \"\"\n                  });\n                }\n              });\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee7() {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                studentId: _this.state.scannedStudentId,\n                bookId: _this.state.scannedBookId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"Issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                bookAvailability: false\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                noOfBooksIssued: firebase.firestore.FieldValue.increment(1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: '',\n                transactionMessage: 'Book Issued'\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee8() {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                studentId: _this.state.scannedStudentId,\n                bookId: _this.state.scannedBookId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"Return\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                bookAvailability: true\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                noOfBooksIssued: firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: '',\n                transactionMessage: 'Book Returned'\n              });\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: null\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 9\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          behaviour: \"padding\",\n          enabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedBookId: text\n            });\n          },\n          value: this.state.scannedBookId.toUpperCase(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId.toUpperCase(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee9() {\n            var transactionMessage;\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    _context9.next = 2;\n                    return _regeneratorRuntime.awrap(_this2.handleTransaction());\n\n                  case 2:\n                    transactionMessage = _context9.sent;\n\n                  case 3:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["D:/Zerlina/whiteHat/Module1/ReactNative/4.WirelessLibrary/c73/AutoPopulateTextInput-master/screens/BookTransactionScreen.js"],"names":["React","Toast","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","handleTransaction","checkBookEligibility","transactionType","alert","checkStudentEligibilityForBookIssue","isStudentEligible","initiateBookIssue","checkStudentEligibilityForReturn","initiateBookReturn","collection","where","get","bookRef","docs","length","map","doc","book","bookAvailability","studentRef","student","noOfBooksIssued","limit","transactionRef","lastBookTransaction","studentId","add","bookId","date","firestore","Timestamp","now","toDate","update","FieldValue","increment","transactionMessage","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","toUpperCase","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, Alert, Toast, StyleSheet, KeyboardAvoidingView } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from 'firebase';\nimport db from '../config'\n\nexport default class TransactionScreen extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: null\n    }\n  }\n\n  getCameraPermissions = async (id) => {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n    this.setState({\n      /*status === \"granted\" is true when user has granted permission\n        status === \"granted\" is false when user has not granted the permission\n      */\n      hasCameraPermissions: status === \"granted\",\n      buttonState: id,\n      scanned: false\n    });\n  }\n\n  handleBarCodeScanned = async ({ type, data }) => {\n    const { buttonState } = this.state\n\n    if (buttonState === \"BookId\") {\n      this.setState({\n        scanned: true,\n        scannedBookId: data,\n        buttonState: 'normal'\n      });\n    }\n    else if (buttonState === \"StudentId\") {\n      this.setState({\n        scanned: true,\n        scannedStudentId: data,\n        buttonState: 'normal'\n      });\n    }\n\n  }\n\n\n\n  handleTransaction = async () => {\n    var transactionType = await this.checkBookEligibility();\n    if(!transactionType){\n   //   Alert.alert(\"The book doesn't exist in the library database!\");\n      alert(\"The book doesn't exist in the library database!\");\n      this.setState({\n        scannedStudentId: \"\",\n        scannedBookId: \"\"\n      });\n    }else if(transactionType === \"Issue\"){\n      var isStudentEligible = await this.checkStudentEligibilityForBookIssue();\n      if (isStudentEligible) {\n        this.initiateBookIssue();\n     //   Alert.alert(\"Book issued to the student!\");\n        alert(\"Book issued to the student!\");\n      }\n\n    }else{\n     var isStudentEligible = await this.checkStudentEligibilityForReturn();\n     if (isStudentEligible) {\n      this.initiateBookReturn();\n      //Alert.alert(\"Book returned to the library!\");\n     alert(\"Book returned to the library!\");\n    }\n    }\n  }\n\n  \n checkBookEligibility = async () => {\n  const bookRef = await db\n    .collection(\"books\")\n    .where(\"bookId\", \"==\", this.state.scannedBookId)\n    .get();\n  var transactionType = \"\";\n  if (bookRef.docs.length == 0) {\n    transactionType = false;\n  } else {\n    bookRef.docs.map(doc => {\n      var book = doc.data();\n      if (book.bookAvailability) {\n        transactionType = \"Issue\";\n      } else {\n        transactionType = \"Return\";\n      }\n    });\n  }\n\n  return transactionType;\n};\n\ncheckStudentEligibilityForBookIssue = async () => {\n  const studentRef = await db\n    .collection(\"students\")\n    .where(\"studentId\", \"==\", this.state.scannedStudentId)\n    .get();\n  var isStudentEligible = \"\";\n  if (studentRef.docs.length === 0) {\n    this.setState({\n      scannedStudentId: \"\",\n      scannedBookId: \"\"\n    });\n    isStudentEligible = false;\n  // Alert.alert(\"The student id doesn't exist in the database!\");\n  alert(\"The student id doesn't exist in the database!\");\n  } else {\n    studentRef.docs.map(doc => {\n      var student = doc.data();\n      if (student.noOfBooksIssued < 2) {\n        isStudentEligible = true;\n      } else {\n        isStudentEligible = false;\n//        Alert.alert(\"The student has already issued 2 books!\");\n        alert(\"The student has already issued 2 books!\");\n        this.setState({\n          scannedStudentId: \"\",\n          scannedBookId: \"\"\n        });\n      }\n    });\n  }\n\n  return isStudentEligible;\n};\n\ncheckStudentEligibilityForReturn = async () => {\n  const transactionRef = await db\n    .collection(\"transactions\")\n    .where(\"bookId\", \"==\", this.state.scannedBookId)\n    .limit(1)\n    .get();\n  var isStudentEligible = \"\";\n  transactionRef.docs.map(doc => {\n    var lastBookTransaction = doc.data();\n    if (lastBookTransaction.studentId === this.state.scannedStudentId) {\n      isStudentEligible = true;\n    } else {\n      isStudentEligible = false;\n     // Alert.alert(\"The book wasn't issued by this student!\");\n     alert(\"The book wasn't issued by this student!\");\n      this.setState({\n        scannedStudentId: \"\",\n        scannedBookId: \"\"\n      });\n    }\n  });\n  return isStudentEligible;\n};\n\n\n  initiateBookIssue = async () => {\n    //add a transaction\n    db.collection(\"transaction\").add({\n      studentId: this.state.scannedStudentId,\n      bookId: this.state.scannedBookId,\n      date: firebase.firestore.Timestamp.now().toDate(),\n      transactionType: \"Issue\"\n    })\n\n    //change book status\n    db.collection(\"books\").doc(this.state.scannedBookId).update({\n      bookAvailability: false\n    })\n    //change number of issued books for student\n    db.collection(\"students\").doc(this.state.scannedStudentId).update({\n      noOfBooksIssued: firebase.firestore.FieldValue.increment(1)\n    })\n\n    this.setState({\n      scannedStudentId: '',\n      scannedBookId: '',\n      transactionMessage: 'Book Issued'\n    })\n    //alert(\"Book Issued\");\n  }\n\n\n  initiateBookReturn = async () => {\n    //add a transaction\n    db.collection(\"transaction\").add({\n      studentId: this.state.scannedStudentId,\n      bookId: this.state.scannedBookId,\n      date: firebase.firestore.Timestamp.now().toDate(),\n      transactionType: \"Return\"\n    })\n\n    //change book status\n    db.collection(\"books\").doc(this.state.scannedBookId).update({\n      bookAvailability: true\n    })\n\n    //change book status\n    db.collection(\"students\").doc(this.state.scannedStudentId).update({\n      noOfBooksIssued: firebase.firestore.FieldValue.increment(-1)\n    })\n\n    this.setState({\n      scannedStudentId: '',\n      scannedBookId: '',\n      transactionMessage: 'Book Returned'\n    })\n    // alert(\"Book Returned\");\n  }\n\n  render() {\n    const hasCameraPermissions = this.state.hasCameraPermissions;\n    const scanned = this.state.scanned;\n    const buttonState = this.state.buttonState;\n\n    if (buttonState !== \"normal\" && hasCameraPermissions) {\n      return (\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n      );\n    }\n\n    else if (buttonState === \"normal\") {\n      return (\n       \n        <KeyboardAvoidingView style={styles.container} behaviour=\"padding\" enabled>\n          <View>\n            <Image\n              source={require(\"../assets/booklogo.jpg\")}\n              style={{ width: 200, height: 200 }} />\n            <Text style={{ textAlign: 'center', fontSize: 30 }}>Wily</Text>\n          </View>\n          <View style={styles.inputView}>\n            <TextInput\n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              onChangeText={text => this.setState({ scannedBookId: text })}\n              value={this.state.scannedBookId.toUpperCase()}\n            />\n            <TouchableOpacity\n              style={styles.scanButton}\n              onPress={() => {\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.inputView}>\n            <TextInput\n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              onChangeText={text => this.setState({ scannedStudentId: text })}\n              value={this.state.scannedStudentId.toUpperCase()} />\n            <TouchableOpacity\n              style={styles.scanButton}\n              onPress={() => {\n                this.getCameraPermissions(\"StudentId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n          <TouchableOpacity\n            style={styles.submitButton}\n            onPress={async () => {\n              var transactionMessage = await this.handleTransaction();\n            }}>\n            <Text style={styles.submitButtonText}>Submit</Text>\n\n          </TouchableOpacity>\n\n\n       \n     \n</KeyboardAvoidingView>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  }\n});"]},"metadata":{},"sourceType":"module"}